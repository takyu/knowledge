@import '../../node_modules/swiper/swiper-bundle.css';
@import 'mixin';

$cGray: rgba(0, 0, 0, 0.8);
$cslidecover: rgba(0, 61, 125, 0.1);

//.swiper {
//	overflow: visible !important;
//}

.swiper-slide {
	height: 500px;

	// scale(1.3)によってはみ出た部分を削除
	overflow: hidden;

	& > img {
		width: 100%;
		height: 100%;
		max-width: 100%;
		object-fit: cover;
		transform: scale(1.3);
		transition: transform 1.9s ease;
	}
	
	&::after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: $cslidecover;
	}

	// slideが終わった時点でtransformを解除
	&-active {
		& > img {
			transform: none;
		}

		.hero__title {
			opacity: 1;
			transform: translate(-50%, -50%);
		}
	}
}

.hero {

	&__title {
		position: absolute;
		top: 5%;
		left: 90%;
		color: $cGray;
		font-size: 30px;

		// calc()を用いて演算ができる -> 初期のy座標を少し下へ
		transform: translate(-50%, calc(-50% + 20px));

		z-index: 2;
		opacity: 0;
		transition: opacity 0.3s ease 1s,
			transform 0.3s ease 1s;
	}

	&__footer {
		position: absolute;
		left: 9%;
		bottom: 35px;
		transform: translateX(-50%);
		z-index: 2;
		height: 68px;
		width: 22px;

		// 矢印を上に動かした際に上にはみ出た部分を非表示に
		overflow: hidden;
	}

	&__downarrow {
		position: absolute;

		// hero__footerからの相対位置
		left: 0;
		bottom: 0;
		width: 6px;

		@include animation(
			$name: kf-arrow-anime,
			$iteration-count: infinite,
			$duration: 2s,
			$timing-function: linear
		)
	}

	&__scrolltext {
		position: absolute;
		transform: rotate(90deg);
		color: $cGray;
		left: -8px;
		top: 11px;
		font-size: 1.2em;
	}
}

// 矢印が下に伸びる表現
@keyframes kf-arrow-anime {
	0%,
	50%,
	100% {
		transform: translateY(-10%);
	}
	30% {
		transform: none;
	}
}
