$cWhite: white;
$cBlack: black;

#container {
	text-align: center;
}

.btn {
	background-color: $cWhite;
	color: $cBlack;
	border: 1px solid $cBlack;
	padding: 10px 40px;
	margin: 50px 0;
	font-weight: 600;
	cursor: pointer;
	transition: all 0.5s;

	&.slide-bg {

		// spanの親タグをslide-bgのボタンにしたいため
		position: relative;

		// buttonの中の枠外にはみ出た要素は非表示に
		overflow: hidden;
		// 枠外のものも表示する場合
		//overflow: visible;

		// hover時のButtonの文字を前面に出したいため
		z-index: 1;

		// 黒い影が覆うstyleをspanで作る
		span {

			//　横幅と縦幅を指定するため
			display: inline-block;
			width: 100%;
			height: 100%;

			background-color: $cBlack;

			/*
			アニメーションするstyleを記述する際は、一旦ホバーが完了した状態
			を仮定して、styleを追記していくのがコツ
			*/
			position: absolute;
			top: 0;
			left: 0;

			// ポインターを当てていない時は黒のspanを当てない
			transform: translate(-100%);

			// スライドアニメーションを適用
			transition: transform 0.5s;

			// ホバー時に黒のspan要素を後面に
			z-index: -1;

		}

		&:hover {
			color: $cWhite;

			// .btn.slide-bg:hover span
			span {
				transform: none;
			}

		}
	}
}